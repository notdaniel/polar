// Generated by CoffeeScript 1.8.0
(function() {
  var express, metaserve, setup;

  express = require('express');

  metaserve = require('metaserve');

  setup = function(config) {
    var RedisStore, app, middleware, _i, _len, _ref, _ref1;
    app = config.app || express();
    if (config.app) {
      app = config.app;
      delete config.app;
    }
    app.config = config;
    app.set('views', config.view_dir || './views');
    app.set('view engine', config.view_engine || 'jade');
    app.use(function(req, res, next) {
      console.log("[" + (new Date().toISOString()) + "] " + req.method + " " + req.url);
      return next();
    });
    if (!config.no_cookie_parser) {
      app.use(express.cookieParser());
    }
    if (!config.no_body_parser) {
      app.use(express.bodyParser());
    }
    if (config.use_sessions != null) {
      RedisStore = require('connect-redis')(express);
      app.use(express.session({
        store: new RedisStore({
          host: ((_ref = config.redis) != null ? _ref.host : void 0) || 'localhost'
        }),
        secret: config.session_secret
      }));
    }
    if (config.middleware != null) {
      _ref1 = config.middleware;
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        middleware = _ref1[_i];
        app.use(middleware);
      }
    }
    app.use(app.router);
    app.use(metaserve(config.metaserve || config.static_dir || {
      compilers: {
        css: [
          !config.debug ? require('metaserve-bouncer')({
            ext: 'bounced.css'
          }) : void 0, require('metaserve-css-styl')()
        ],
        js: [
          !config.debug ? require('metaserve-bouncer')({
            ext: 'bounced.js'
          }) : void 0, require('metaserve-js-coffee-reactify')({
            ext: 'coffee',
            uglify: !config.debug
          })
        ]
      }
    }));
    app.start = function() {
      return app.listen(config.port, function() {
        return console.log("Listening on :" + config.port);
      });
    };
    return app;
  };

  module.exports = setup;

}).call(this);
